*Khizar Qureshi, Research;
*This version: 2015-09-04;
******************************************************************************************************************************************************;
*Introduction;
******************************************************************************************************************************************************;
*The purpose of table1 is to create a table that displays the characteristics of trades across different trade types;
*The three different types of trade are: retail, interdealer, and institutional;
*The characteristics studied include:; 
*(1) Number of Trades, (2) Mean Trade Rate, (3) Trade Size in Value, (4) Trade Volume, (5) Frequency of days with a trade;
*The moments studied are: (1) mean and (2) standard deviation (later);
*These characteristics are across CUSIPS. We study across: (1) specific trade types, (2) overall;

******************************************************************************************************************************************************;
*Number of Trades: Defined as a count of trades;
******************************************************************************************************************************************************;
******************************************************************************************************************************************************;
*Trades per Day: Defined as the sum of all trades divided by the number of trading days;
******************************************************************************************************************************************************;
******************************************************************************************************************************************************;
*Trade Value: Defined as the transaction in value, as determined by a price and quantity of trade;
******************************************************************************************************************************************************;
******************************************************************************************************************************************************;
*Mean Dollar Volume: Defined as the aggregate trade value over the span of a time period;
******************************************************************************************************************************************************;
******************************************************************************************************************************************************;
*Trade Frequency: Defined as the proportion of days in which at least one trade occurred since the day of first trade;
******************************************************************************************************************************************************;
/* Trade-Type */																*Classification;
%let path = T:\Khizar;															*Assign path to user folder;
libname Data "&path\Data"; 														*Assign the path to \Data;
%let _sdtm=%sysfunc(datetime()); 												*Begin timer because a secondary objective is to reduce runtime;
proc sort data=Data.Tracetradestrim out=Data.Tracetradestrim; by Cusip retail; 	*Sort by cusip and classification;
run;
data Data.TraceTradestrim; 														*Data.Tracetradestrim will be the primary dataset;
set Data.Tracedaystrim; *where EffectiveDateTime >= '01Dec2014:00:00:00'DT; 	*To truncate the dataset for initial testing. Remove (*) for reducing sample;														
by Cusip EffectiveDate; 														*sort by Cusips first since the summary stats are by cusip;
* Count Trading days per cusip;
if lag(EffectiveDate)~= EffectiveDate then countTDays +1; 						*If consecutive effectivedates are distinguishable, increase the number of trading days by 1;
if first.EffectiveDate and first.Cusip then countTDays = 1;						*Set the number of trading days to 1 if it is the first day a new cusip is trading;

* Count time from first trade;
daysfromfirst + dif(EffectiveDateTime)/86400; 									*Divide by number of seconds in a day (86400=60*60*24);
if first.EffectiveDate and first.Cusip then daysfromfirst = 0; 					*If a new cusip is on its first effectivedate, set days from first day to zero;

* Count Number of Trades per cusip;
ntrades + 1; *Sum the trades;


if first.Cusip then do;
	ntrades=1; 																	*Initialize the number of trades on each new cusip to 1;
end;


retail = .; 																	*Initialize retail to ., which means no value. This will be updated through conditioning below;
if (TradeTypeCode = 'D') then retail = -1;  									*The trade type code indicates buyer (B), seller (S), or interdealer (D);
else if Quantity >= 100000 then retail = 0; 									*Require an arbitrary minimum quantity for institutional (block) trades;
else retail = 1; *All other trades are retail trades;

;
tradeValue = Quantity*Price/100;												*TV=Price*Quantity/100;
							
Volume + tradeValue; 															*Update the volume by adding trade value throughout the trading day;
VolumeDealer + tradeValue*(retail=-1);
VolumeInst + tradeValue*(retail=0);
VolumeRetail + tradeValue*(retail=1);



if first.Cusip then do;															*For new cusips, begin to re-calculate volume;													
Volume=tradeValue;
VolumeDealer=tradeValue*(retail=-1);
VolumeInst=tradeValue*(retail=0);
VolumeRetail=tradeValue*(retail=1);
end;

run;	
******************************************************************************************************************************************************;
*Summary Statistics;
******************************************************************************************************************************************************;
		
data tracetradestrim2;set data.tracetradestrim; 
dailytrades=ntrades/504;dailyvalue=tradeValue/504;frequency=countTdays/504;																								*The time frame is two years, or 504 trading days;
run;
data end; set tracetradestrim2; by cusip; where endofday=1; dailyvolume=volume/504;run;																					*Separate the finals trades of the day for volume aggregation;
proc means data=tracetradestrim2 noprint mean; class retail; var ntrades; output out=meantrades N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95; 			*Summarize Number of Trades;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var dailytrades; output out=meandailytrades N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95; *Summarize Trade Rate;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var dailyvolume; output out=meandailyvolume N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95; *Summarize Intraday Daily Volume=TradeValue;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var dailyvalue; output out=meandailyvalue N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;	*Summarize Trade Value;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var frequency; output out=frequency N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;			*Summarize frequency;
run;
proc means data=end noprint mean; class retail; var dailyvolume; output out=meandailyvolume N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;				*Summarize daily volume;
run;	 																																								
%let _edtm=%sysfunc(datetime());																																		*This is the end of the timing process;
%let _runtm=%sysfunc(putn(&_edtm - &_sdtm, 12.4));
%put It took &_runtm second to run the program;
******************************************************************************************************************************************************;
*Export: Exports tables into MS Excel;
******************************************************************************************************************************************************;

*libname Data "&path\Data";
*EXPORT ROUTINES;
proc export data=Work.meantrades
	outfile = "T:\Khizar\AvgTrades_type.csv" 
	dbms=csv replace;
	run;
proc export data=Work.meandailytrades
	outfile = "T:\Khizar\Rate_type.csv" 
	dbms=csv replace;
	run;
proc export data=Work.meandailyvalue
	outfile = "T:\Khizar\Value_type.csv" 
	dbms=csv replace;
	run;
proc export data=Work.meandailyvolume
	outfile = "T:\Khizar\Volume_type.csv" 
	dbms=csv replace;	
	run;
proc export data=Work.frequency
	outfile = "T:\Khizar\Frequency_type.csv" 
	dbms=csv replace;
	run;
******************************************************************************************************************************************************;
*End;
******************************************************************************************************************************************************;

















******************************************************************************************************************************************************;
*Export: Exports tables into MS Excel;
******************************************************************************************************************************************************;

*libname Data "&path\Data";
*EXPORT ROUTINES;












proc export data=Work.meantrades
	outfile = "T:\Khizar\AvgTrades_type.csv" 
	dbms=csv replace;
	run;

	proc export data=Work.meandailytrades
	outfile = "T:\Khizar\Rate_type.csv" 
	dbms=csv replace;
	run;

proc export data=Work.meandailyvalue
	outfile = "T:\Khizar\Value_type.csv" 
	dbms=csv replace;
	run;

proc export data=Work.meandailyvolume
	outfile = "T:\Khizar\Volume_type.csv" 
	dbms=csv replace;
	run;

proc export data=Work.frequency
	outfile = "T:\Khizar\Frequency_type.csv" 
	dbms=csv replace;
	run;


******************************************************************************************************************************************************;
*Number of Trades: Defined as a count of trades;
******************************************************************************************************************************************************;

******************************************************************************************************************************************************;
*Trades per Day: Defined as the sum of all trades divided by the number of trading days;
******************************************************************************************************************************************************;

******************************************************************************************************************************************************;
*Trade Value: Defined as the transaction in value, as determined by a price and quantity of trade;
******************************************************************************************************************************************************;

******************************************************************************************************************************************************;
*Mean Dollar Volume: Defined as the aggregate trade value over the span of a time period;
******************************************************************************************************************************************************;
******************************************************************************************************************************************************;
*Trade Frequency: Defined as the proportion of days in which at least one trade occurred since the day of first trade;
******************************************************************************************************************************************************;

*Exclude first trading day;


data Data.tradesByCusip;*interested in trades per cusip and arrival rate;
set Data.Tracetradestrim; where countTDays>=90;									*concatenate main data set;
by Cusip;																		*organize by cusip;

ntradesRetail=(ntrades*(retail=1));												*Count trades by trade type;
ntradesI=ntrades*(retail=0);
ntradesDealer=ntrades*(retail=-1);
*find Arrival rates with minimum number of trading days;
rateTrades = ntrades/504;												*once five trading days have passed, find arrival rate using updating number of trades and days;
rateTradesRetail=ntradesRetail/504;
rateTradesI=ntradesI/504;
rateTradesDealer=ntradesDealer/504;
*find trades per day with minimum number of trading days;
trades_day = ntrades/countTdays;												*divide number of total trades by number of total days of trading;
trades_day_retail = nTradesRetail/countTdays;
trades_day_dealer = nTradesDealer/countTdays;
trades_day_I = nTradesI/countTdays;

frequency = countTDays/(504);								*Frequency is defined as the fraction of trading days in which at least one trade occurs;


*output if all cusips considered;
if last.Cusip then output;														*end when the last recorded trade for a cusip is considered;
run;
data endbycusip;
set data.tradesbycusip; by cusip;where endofday=1;

rateTrades = ntrades/504;												*once five trading days have passed, find arrival rate using updating number of trades and days;
rateTradesRetail=ntradesRetail/504;
rateTradesI=ntradesI/504;
rateTradesDealer=ntradesDealer/504;
*find trades per day with minimum number of trading days;
trades_day = ntrades/countTdays;												*divide number of total trades by number of total days of trading;
trades_day_retail = nTradesRetail/countTdays;
trades_day_dealer = nTradesDealer/countTdays;
trades_day_I = nTradesI/countTdays;

frequency = countTDays/(504);	

run;

proc sort data=Endbycusip out=Endbycusip ; by Cusip retail; run;	*Sort by ascending cusips and trade type;
proc means data=endbycusip noprint;										*Study frequency across cusips;
by cusip;
var frequency retail;
output out=FrequencybyCusip  mean(frequency)=mean_frequency mean(retail)=retail N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;
proc sort data=frequencybycusip out=frequencybycusip;by retail;run;
proc means data=FrequencybyCusip noprint;
by retail;
var Mean_frequency;
output out =FreqDist N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run; 
proc means data=Frequencybycusip noprint;
var Mean_frequency;
output out =FreqDistAll N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run; 



proc sort data=endbycusip out=endbycusip ; by Cusip retail; run;
proc means data=endbycusip  noprint;
by Cusip;
var rateTrades ratetradesRetail ratetradesI ratetradesDealer;
output out=RatesbyCusip mean(retail)=retail N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;


proc sort data=endbycusip out=endbycusip ; by Cusip retail; run;
proc means data=endbycusip  noprint;
by Cusip;
var trades_day  trades_day_Retail trades_day_I trades_day_Dealer ;
output out=AvgbyCusip mean(trades_day)=mean mean(retail)=retail N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;

proc sort data=RatesbyCusip;by retail; run;
proc means data=RatesbyCusip noprint;
by retail;
var Mean P1 P5 P25 P50 P75 P95 P95;
output out=RatesDist1 N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;;
run;

proc means data=RatesbyCusip noprint;
var Mean P1 P5 P25 P50 P75 P95 P95;
output out=RatesDist1All N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;;
run;

proc sort data=AvgbyCusip;by retail; run;
proc means data=RatesbyCusip noprint;
by retail;
var Mean P1 P5 P25 P50 P75 P95 P95;
output out=AvgDist1 N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;;
run;
proc means data=RatesbyCusip noprint;
var Mean P1 P5 P25 P50 P75 P95 P95;
output out=AvgDist1All N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;;
run; 







******************************************************************************************************************************************************;
*Trade Value: Defined as the transaction in value, as determined by a price and quantity of trade;
******************************************************************************************************************************************************;

proc sort data=Data.Tracetradestrim out=Data.Tracetradestrim; by Cusip retail; run;

proc means data = Data.Tracetradestrim noprint;										*Refer to main dataset;
by Cusip retail;	
var tradeValue;																		*Interested in trade value across trade types;
output out = valuebyCusip mean(tradeValue)=Val_bar;  								*find mean of trade value. the retail status should not change;
run;

data valueRetail; set valuebyCusip; where retail=1; run;							*Isolate retail trades;
data valueDeal; set valuebyCusip; where retail=-1 ; run;							*Isolate dealer trades;
data valueI; set valuebyCusip; where retail=0 ; run;								*Isolate institutional trades;
	
proc means data=valueRetail noprint; 												*Consider the mean trade value across retail types;	
var Val_bar;
output out= distValRet N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;					*Output the distribution of mean trade value by trade type;
run;

proc means data=valueDeal noprint; 													*Consider the mean trade value across dealer types;	
var Val_bar;
output out= distValDeal N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;				*Output the distribution of mean trade value by trade type;
run;

proc means data=valueI noprint; 													*Consider the mean trade value across institutional types;	
var Val_bar;
output out= distValI N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;					*Output the distribution of mean trade value by trade type;
run;

proc means data=valuebyCusip noprint; 												*Consider the mean trade value across all types;	
var Val_bar;
output out= distVal N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;						*Output the distribution of mean trade value by trade type;
run;

data valDist; set distVal distValRet distValI distValDeal; run;						*Stack each distribution;

******************************************************************************************************************************************************;
*Mean Dollar Volume: Defined as the aggregate trade value over the span of a time period;
******************************************************************************************************************************************************;
*Volume=Cumulative intraday trade Value;


data Data.endofDayVolume; set Data.TraceTradestrim; where endofday=1;run;			*Count volume only at end of day;
proc sort data=data.endofdayvolume out=data.endofdayvolume;by cusip retail;run;
proc means data=Data.endofDayVolume noprint;
by Cusip retail;
var Volume;*VolumeRetail VolumeInst VolumeDealer;									*Study trade type volume at end of day;
output out = volumebyCusip mean(Volume)=mean_Volume mean(retail)=retail N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;

proc sort data=VolumebyCusip out=VolumebyCusip; by retail; run; *Only averages;
proc means data=VolumebyCusip noprint;
by retail;
var Mean P1 P5 P25 P50 P75 P95 P95;
output out=VolumeDist1 N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;
proc means data=VolumebyCusip noprint;
var Mean P1 P5 P25 P50 P75 P95 P95;
output out=VolumeDist1All N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;




******************************************************************************************************************************************************;
*Number of Trades: Defined as a count of trades;
******************************************************************************************************************************************************;

*Number of Trades;
*Counting trades across each trade type;
proc sort data=Data.tradesbycusip out=Data.tradesbycusip; by retail;run;
proc means data=Data.tracetradestrim noprint mean;	
class retail;															*Interested in trades across trade types for each maturity;
var Ntrades;

output out = Data.distrTradesbyCusip N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;


data tradeDist; set Data.distrTradesbyCusip; run;
	proc univariate data=data.Tracetradestrim noprint;
	var Ntrades retail;
	histogram;
	run;

proc means data=tracetradestrim2 noprint mean; class retail; var ntrades; output out=meantrades N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var dailytrades; output out=meandailytrades N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var dailyvolume; output out=meandailyvolume N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var dailyvalue; output out=meandailyvalue N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;
proc means data=tracetradestrim2 noprint mean; class retail; var frequency; output out=frequency N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;


proc means data=end noprint mean; class retail; var dailyvolume; output out=meandailyvolume N=Count mean=Mean P1=P1 P5=P5 P25=P25 P50=P50 P75=P75 P95=P95;
run;



*timer; 												*This is the end of the timing process;
%let _edtm=%sysfunc(datetime());
%let _runtm=%sysfunc(putn(&_edtm - &_sdtm, 12.4));
%put It took &_runtm second to run the program;

















******************************************************************************************************************************************************;
*Export: Exports tables into MS Excel;
******************************************************************************************************************************************************;

*libname Data "&path\Data";
*EXPORT ROUTINES;












proc export data=Work.meantrades
	outfile = "T:\Khizar\AvgTrades_type.csv" 
	dbms=csv replace;
	run;

	proc export data=Work.meandailytrades
	outfile = "T:\Khizar\Rate_type.csv" 
	dbms=csv replace;
	run;

proc export data=Work.meandailyvalue
	outfile = "T:\Khizar\Value_type.csv" 
	dbms=csv replace;
	run;

proc export data=Work.meandailyvolume
	outfile = "T:\Khizar\Volume_type.csv" 
	dbms=csv replace;
	run;

proc export data=Work.frequency
	outfile = "T:\Khizar\Frequency_type.csv" 
	dbms=csv replace;
	run;



